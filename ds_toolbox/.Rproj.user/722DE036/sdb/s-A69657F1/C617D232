{
    "contents" : "rankall <- function(outcome, num = \"best\") {\n        ## Read outcome data\n        ## Read outcome data\n        df <- read.csv(\"./outcome-of-care-measures.csv\", colClasses = \"character\",na.strings=\"Not Available\")\n        \n        ## Check that state and outcome are valid\n        ok_parameter1 = c(\"heart attack\",\"heart failure\",\"pneumonia\")\n        if (!outcome %in% ok_parameter1) { stop(\"invalid outcome\")}\n        \n        ok_parameter2 = unique(df[,\"State\"])\n        if (!state %in% ok_parameter2) stop(\"invalid state\")\n\n        ## For each state, find the hospital of the given rank\n        #column name\n        colnamesvec <-  c(\"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack\", \"Hospital.30.Day.Death..Mortality..Rates.from.Heart.Failure\", \"Hospital.30.Day.Death..Mortality..Rates.from.Pneumonia\")\n        colName <- colnamesvec[match(outcome,ok_parameter1)]\n        ## Return a data frame with the hospital names and the\n        ## (abbreviated) state name\n        hospital<-character(0)\n        for (i in seq_along(ok_parameter2)) {\n\n                dfa <- df[df$State==ok_parameter2[i],]\n                \n                # order data by outcome\n                sort <- dfa[order(as.numeric(dfa[[colName]]),dfa[[\"Hospital.Name\"]],decreasing=FALSE,na.last=NA), ]\n                \n                #handle num input\n                this.num = num\n                if (this.num==\"best\") this.num = 1\n                if (this.num=='worst') this.num = nrow(sort)\n                \n                hospital[i] <- sort[this.num,\"Hospital.Name\"]\n        }\n        \n\n        data.frame(hospital=hospital,state=ok_parameter2,row.names=ok_parameter2)\n        \n}\n        ",
    "created" : 1422643091307.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3327795203",
    "id" : "C617D232",
    "lastKnownWriteTime" : 1422644168,
    "path" : "~/Desktop/OPI/ds_toolbox/prog_3/rankall.R",
    "project_path" : "prog_3/rankall.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}